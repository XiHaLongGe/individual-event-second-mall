<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nf.dao.port.BrandInfDao">
    <sql id="insertParams">
        product_category_id,
        brand_inf_name
    </sql>
    <sql id="allParams">
        brand_inf_id,
        product_category_id,
        brand_inf_name
    </sql>
    <sql id="joinProCategoryParams">
        b.brand_inf_id,
        b.product_category_id,
        b.brand_inf_name,
        p.product_category_name as productCategoryName
    </sql>
    <resultMap id="brandInfResultMap" type="com.nf.entity.BrandInfEntity">
        <result column="productCategoryName" property="productCategoryName"/>
    </resultMap>
    <!---->
    <select id="getPageByCondition" resultMap="brandInfResultMap">
        select <include refid="joinProCategoryParams"/>
        from brand_inf b join product_category p
        on b.product_category_id = p.product_category_id
        where 1=1
        <choose>
            <when test="brandInfEntity.productCategoryId != null and brandInfEntity.productCategoryId != ''">
                and b.product_category_id = #{brandInfEntity.productCategoryId}
            </when>
            <when test="brandInfEntity.brandInfName != null and brandInfEntity.brandInfName != ''">
                and b.brand_inf_name like '%' #{brandInfEntity.brandInfName} '%'
            </when>
        </choose>
    </select>

    <!--根据品牌信息id来获取品牌信息数据-->
    <select id="getByBrandInfId" resultType="com.nf.entity.BrandInfEntity">
        select <include refid="allParams"/>
        from brand_inf
        where brand_inf_id = #{brandInfId}
    </select>

    <!--添加品牌信息数据-->
    <insert id="insertBrandInf">
        insert brand_inf(<include refid="insertParams"/>)
        values
        (
            #{brandInfEntity.productCategoryId},
            #{brandInfEntity.brandInfName}
        )
    </insert>

    <!--修改品牌信息数据-->
    <update id="updateBrandInf">
        update brand_inf
        set product_category_id = #{brandInfEntity.productCategoryId},
            brand_inf_name = #{brandInfEntity.brandInfName}
        where brand_inf_id = #{brandInfEntity.brandInfId}
    </update>

    <!--根据商品类型id对品牌信息进行删除-->
    <delete id="deleteByProductCategoryId">
        delete from brand_inf
        where product_category_id in
        <foreach collection="productCategoryIdArray" item="productCategoryIdArray" open="(" separator="," close=")">
            #{productCategoryIdArray}
        </foreach>
    </delete>

    <!--批量删除品牌信息-->
    <delete id="batchDeleteBrandInf">
        delete from brand_inf
        where 1 = 1
        and brand_inf_id in
        <foreach collection="brandInfIdArray" item="brandInfIdArray" open="(" separator="," close=")">
            #{brandInfIdArray}
        </foreach>
    </delete>
</mapper>