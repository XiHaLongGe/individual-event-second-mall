<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nf.dao.port.PbrDao">
    <sql id="allParams">
        pbr_id,
        product_category_id,
        brand_inf_id
    </sql>
    <sql id="joinParams">
        pbr.pbr_id,
        bi.brand_inf_name as brandInfName,
        pc.product_category_name as productCategoryName
    </sql>
    <sql id="insertParams">
        product_category_id,
        brand_inf_id
    </sql>
    
    <resultMap id="joinResultMap" type="com.nf.entity.ProCategoryBrandInfRelevanceEntity">
        <result property="brandInfName" column="brandInfName"/>
        <result property="productCategoryName" column="productCategoryName"/>
    </resultMap>

    <!--根据商品类型品牌信息关联表id获得数据-->
    <select id="getByPbrId" resultType="com.nf.entity.ProCategoryBrandInfRelevanceEntity">
        select <include refid="allParams"/>
        from procategory_brandinf_relevance
        where pbr_id = #{pbrId}
    </select>

    <!--根据条件查询关联表信息-->
    <select id="getPageByCondition" resultMap="joinResultMap">
        select <include refid="joinParams"/>
        from procategory_brandinf_relevance pbr join brand_inf bi
        on pbr.brand_inf_id = bi.brand_inf_id
        join product_category pc
        on pbr.product_category_id = pc.product_category_id
        where 1=1
        <choose>
            <when test="pbrEntity.brandInfId != null and pbrEntity.brandInfId != 0">
                and brand_inf_id = #{pbrEntity.brandInfId}
            </when>
            <when test="pbrEntity.productCategoryId != null and pbrEntity.productCategoryId != 0">
                and product_category_id = #{pbrEntity.productCategoryId}
            </when>
        </choose>
        order by pbr_id
    </select>

    <!--根据关联表id获得商品类型品牌信息数据-->
    <select id="getListByPbrId" resultType="com.nf.entity.ProCategoryBrandInfRelevanceEntity">
        select brand_inf_id
        from procategory_brandinf_relevance
        where pbr_id
        in
            <foreach collection="pbrIdArray" item="pbrIdArray" open="(" separator="," close=")">
                #{pbrIdArray}
            </foreach>
    </select>

    <!--通过商品类型id来获得其中子类型存在的条目数量-->
    <select id="getByProCategoryIdCount" resultType="integer">
        select COUNT(*)
        from procategory_brandinf_relevance
        where product_category_id
        in
            <foreach collection="proCategoryIdArray" item="proCategoryIdArray" open="(" separator="," close=")">
                #{proCategoryIdArray}
            </foreach>
    </select>

    <!--通过品牌信息id来获得在关联表中存在的条目数量-->
    <select id="getByBrandInfIdCount" resultType="integer">
        select COUNT(*)
        from procategory_brandinf_relevance
        where brand_inf_id
        in
            <foreach collection="brandInfIdArray" item="brandInfIdArray" open="(" separator="," close=")">
                #{brandInfIdArray}
            </foreach>
    </select>

    <!--获取到关联表中所有的品牌信息id-->
    <select id="getAllBrandInfId" resultType="integer">
        select brand_inf_id
        from procategory_brandinf_relevance
        group by brand_inf_id
    </select>

    <!--获取到关联表中所有的商品类型id-->
    <select id="getAllProCategoryId" resultType="string">
        select product_category_id
        from procategory_brandinf_relevance
        group by product_category_id
    </select>

    <!--添加商品类型品牌信息关联表的数据-->
    <insert id="insertPbr">
        insert procategory_brandinf_relevance(<include refid="insertParams"/>)
        values
        (
            #{proCategoryBrandInfRelevanceEntity.productCategoryId},
            #{proCategoryBrandInfRelevanceEntity.brandInfId}
        )
    </insert>

    <!--修改商品类型品牌信息关联表的数据-->
    <update id="updatePbr">
        update procategory_brandinf_relevance
        set product_category_id = #{proCategoryBrandInfRelevanceEntity.productCategoryId}
        where pbr_id = #{proCategoryBrandInfRelevanceEntity.pbrId}
    </update>

    <!--批量删除关联表中包含传入品牌信息id的数据-->
    <delete id="batchDeleteByBrandInfId">
        delete from procategory_brandinf_relevance
        where brand_inf_id in
        <foreach collection="brandInfIdArray" item="brandInfIdArray" open="(" separator="," close=")">
            #{brandInfIdArray}
        </foreach>
    </delete>

    <!--批量删除关联表信息-->
    <delete id="batchDeleteBrandInf">
        delete from procategory_brandinf_relevance
        where pbr_id in
        <foreach collection="pbrIdArray" item="pbrIdArray" open="(" separator="," close=")">
            #{pbrIdArray}
        </foreach>
    </delete>
</mapper>