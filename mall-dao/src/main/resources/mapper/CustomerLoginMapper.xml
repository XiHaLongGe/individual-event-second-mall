<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nf.dao.port.CustomerLoginDao">
    <sql id="selectParams">
        login_id,
        head_icon_url,
        login_name,
        login_account,
        login_password,
        activate_code,
        account_stats,
        webmaster
    </sql>
    <sql id="registerParams">
        login_name,
        login_account,
        login_password,
        activate_code
    </sql>
    <select id="getByLoginAccount" resultType="com.nf.entity.CustomerLoginEntity">
        select <include refid="selectParams"/>
        from customer_login
        where login_account = #{loginAccount}
    </select>
    <!--验证用户登录时输入的账号密码是否正确-->
    <select id="verifyLogin" resultType="boolean">
        select count(*) from customer_login
        where
            login_account = #{customerLoginEntity.loginAccount}
        and
            login_password = #{customerLoginEntity.loginPassword}
    </select>
    <!--
        useGenerateKeys这个属性，意思就是使用自增。我们需要将这个字段设置为 true 。
        使用 keyProperty=""来指定bean中的哪一个属性是这个自增字段。
        因为在CustomerLoginDao接口中的insertCustomer方法中的参数使用了@Param注解，所以keyProperty需要指定为 customerLoginEntity.loginId。

        数据插入成功后，id值被反填到CustomerLoginEntity对象中，调用getLoginId()就可以获取。
    -->
    <!--新用户用户注册-->
    <insert id="registerCustomer" useGeneratedKeys="true" keyProperty="customerLoginEntity.loginId">
        insert into customer_login(<include refid="registerParams"/>) values
        (
            #{customerLoginEntity.loginName},
            #{customerLoginEntity.loginAccount},
            #{customerLoginEntity.loginPassword},
            #{customerLoginEntity.activateCode}
        );
    </insert>
    <!--修改用户帐号状态-->
    <update id="updateAccountStats">
        update customer_login set account_stats = #{customerLoginEntity.accountStats}
        where activate_code = #{customerLoginEntity.activateCode}
    </update>
</mapper>